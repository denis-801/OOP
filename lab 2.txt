public abstract class Vehicle{

	// attributes

	String fueltype;

	

	public void accelerate(int speed){

		System.out.println("Vehicle accelerates by: "+speed);

	};

	public abstract void stop();

	public abstract void gas();

	

	public static void main(String[] args){

		Sedan car = new Sedan();

		car.accelerate(4);//Overidden

		car.accelerate(4.0);//Overloaded

	}

}



interface Automobile{ // an interface cannot extend a class

	int doors=5; // attributes in interfaces are public, static, final
    int sittingcapacity=5;
	int enginecap=1500;
	
	public boolean stereo();
    public void move();
}



class Sedan extends Vehicle implements Automobile{

	

	@Override

	public void accelerate(int speed{

		System.out.println("Sedan accelerates by: "+speed);

	}

	

	public void accelerate(double speed){//for overloading

		System.out.println("The sedan's new speed is"+speed);

	}

	

	public void stop(){

	System.out.println("Sedan stop");

	}

	

	public void gas(){

		System.out.println("Sedan gas");

	}

	

	public boolean airconditioner(){

		return true;

	}

}



class SportsCar extends Vehicle implements Automobile{



	public void stop(){

	System.out.println("SportsCar stop");

	}

	

	public void gas(){

		System.out.println("SportsCar gas");

	}

	

	public boolean airconditioner(){

		return false;

	}

}



class Motorcycle extends Vehicle{

	public void stop(){

	System.out.println("Motorcycle stop");

	}

	

	public void gas(){

		System.out.println("Motorcycle gas");

	}

}

 

 class Bus extends Vehicle{

	public void stop(){

	System.out.println("Bus stops");

	}

	

	public void gas(){

		System.out.println("Bus moves");

	}

 }

 

 class LuxuryBus extends Bus{

 }

 

 class SchoolBus extends Bus{

 }